<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://phantomn.github.io/</id><title>Ph4nt0m</title><subtitle>Pwn/Rev/Kernel/Fuzzing/CodeQL etc...</subtitle> <updated>2021-04-09T15:43:27+09:00</updated> <author> <name>Ph4nt0m</name> <uri>https://phantomn.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://phantomn.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://phantomn.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Ph4nt0m </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>HackCTF RTL_core</title><link href="https://phantomn.github.io/posts/HackCTF-RTL_core/" rel="alternate" type="text/html" title="HackCTF RTL_core" /><published>2021-04-05T17:00:00+09:00</published> <updated>2021-04-07T10:23:02+09:00</updated> <id>https://phantomn.github.io/posts/HackCTF-RTL_core/</id> <content src="https://phantomn.github.io/posts/HackCTF-RTL_core/" /> <author> <name>Ph4nt0m</name> </author> <category term="WriteUp" /> <category term="Pwnable" /> <summary> RTL_core Source ➜ RTLcore git:(master) ✗ checksec --file rtlcore [*] '/home/ubuntu/CTF/hackctf/pwnable/RTLcore/rtlcore' Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) ssize_t core() { int buf; // [esp+Ah] [ebp-3Eh] BYREF int v2; // [esp+Eh] [ebp-3Ah] BYREF int v3; // [esp+38h] [ebp-10h] ... </summary> </entry> <entry><title>HackCTF 1996</title><link href="https://phantomn.github.io/posts/HackCTF-1996/" rel="alternate" type="text/html" title="HackCTF 1996" /><published>2021-04-02T17:00:00+09:00</published> <updated>2021-04-02T17:00:00+09:00</updated> <id>https://phantomn.github.io/posts/HackCTF-1996/</id> <content src="https://phantomn.github.io/posts/HackCTF-1996/" /> <author> <name>Ph4nt0m</name> </author> <category term="WriteUp" /> <category term="Pwnable" /> <summary> 1996 Source ➜ pwnable git:(master) ✗ checksec --file 1996 [*] '/home/ubuntu/CTF/hackctf/pwnable/1996' Arch: amd64-64-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x400000) int spawn_shell(void) { char *argv[2]; // [rsp+0h] [rbp-10h] BYREF argv[0] = "/bin/bash"; argv[1] = 0LL; return execve("/bin/bash", argv... </summary> </entry> <entry><title>HackCTF Smooth CipherText</title><link href="https://phantomn.github.io/posts/HackCTF-Smooth_CipherText/" rel="alternate" type="text/html" title="HackCTF Smooth CipherText" /><published>2021-04-02T17:00:00+09:00</published> <updated>2021-04-08T09:58:10+09:00</updated> <id>https://phantomn.github.io/posts/HackCTF-Smooth_CipherText/</id> <content src="https://phantomn.github.io/posts/HackCTF-Smooth_CipherText/" /> <author> <name>Ph4nt0m</name> </author> <category term="WriteUp" /> <category term="Crypto" /> <summary> Smooth CipherText Source Rijvsmysmysmy Itovwyrc! Ns wyy ixsu Glm kq G? wc lkqc sw qwsmdlkkr sr...M ixsu fipi acvp urer iss geld! Md iss mel niastfov rrmq mvwzxmqvyw, cme gyx kcd xfo gmbvcmx yxwuov. qy, jjkk gc LymoADJ{t_tzwi_3vxbd0p3_vff.afy'q_wzoxpq_dp_qfz} Solve 처음엔 단순한 Caesar 암호인줄알았는데 아니었다. 그럼 두번째로는 비즈네르 암호지. 요즘세상 참 편해짐. 하지만 플래그 부분은 완전히 디코드가 안된것 같다. 그럼 저 부분만 다시 카이사르부터 ㄱㄱ지. easy </summary> </entry> <entry><title>HackCTF g++ pwn</title><link href="https://phantomn.github.io/posts/HackCTF-g++_pwn/" rel="alternate" type="text/html" title="HackCTF g++ pwn" /><published>2021-04-01T17:00:00+09:00</published> <updated>2021-04-01T17:00:00+09:00</updated> <id>https://phantomn.github.io/posts/HackCTF-g++_pwn/</id> <content src="https://phantomn.github.io/posts/HackCTF-g++_pwn/" /> <author> <name>Ph4nt0m</name> </author> <category term="WriteUp" /> <category term="Pwnable" /> <summary> g++ pwn ➜ pwnable git:(master) ✗ checksec --file gpwn [*] '/home/ubuntu/CTF/hackctf/pwnable/gpwn' Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) Source int get_flag() { return system("cat flag.txt"); } std::string *__stdcall replace(std::string *a1, std::string *a2, std::string *a3) { int... </summary> </entry> <entry><title>HackCTF Poet</title><link href="https://phantomn.github.io/posts/HackCTF-Poet/" rel="alternate" type="text/html" title="HackCTF Poet" /><published>2021-04-01T17:00:00+09:00</published> <updated>2021-04-01T17:00:00+09:00</updated> <id>https://phantomn.github.io/posts/HackCTF-Poet/</id> <content src="https://phantomn.github.io/posts/HackCTF-Poet/" /> <author> <name>Ph4nt0m</name> </author> <category term="WriteUp" /> <category term="Pwnable" /> <summary> Poet Source void __noreturn reward() { char s[136]; // [rsp+0h] [rbp-90h] BYREF FILE *stream; // [rsp+88h] [rbp-8h] stream = fopen("./flag.txt", "r"); fgets(s, 128, stream); printf(format, &amp;amp;author, s); exit(0); } int rate_poem() { char dest[1032]; // [rsp+0h] [rbp-410h] BYREF char *s1; // [rsp+408h] [rbp-8h] strcpy(dest, poem); for ( s1 = strtok(dest, " \n"); s1; s1... </summary> </entry> </feed>
